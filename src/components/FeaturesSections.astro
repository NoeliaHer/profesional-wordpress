---
const { align = 'center', title, subtitle, items, icons, backgroundImage } = Astro.props;

interface Item {
  title: string;
  content: string;
}

interface Icon {
  name: string;
}
---

<div class="py-16 sm:py-12 relative overflow-hidden">
  <div class="absolute inset-0">
    <img src={backgroundImage} alt="Background" class="w-full h-full object-cover filter blur-md" />
    <div class="absolute inset-0 bg-gray-200 opacity-70"></div> {/* Overlay to slightly darken the background */}
  </div>
  <div class="relative mx-auto max-w-6xl px-2 lg:px-4">
    <div class="mx-auto max-w-2xl lg:text-center relative z-10">
      <h2 class="text-2xl font-semibold leading-7 text-indigo-600">{subtitle}</h2>
      <p class="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">{title}</p>
    </div>
    <div class="relative mx-auto mt-6 max-w-4xl sm:mt-20 lg:mt-24 lg:max-w-5xl z-10">
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-8">
        {items.map((item: Item, index: number) => (
          <div class="bg-white border border-gray-200 p-6 rounded-lg shadow-md relative" key={index}>
            <h2 class="text-2xl font-semibold leading-7 text-black font-bold mb-2 inline-block">{item.title}</h2>
            <i class={`h-8 w-8 ${icons[index]} text-indigo-600 mb-4 inline-block ml-2`}></i>
            <p class="text-base leading-7 text-gray-600">{item.content}</p>
          </div>
        ))}
      </div>
    </div>
  </div>
</div>

<style>
  .feature-box {
    color: black;
    border-radius: 1rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    position: relative;
    transition: transform 0.3s ease-in-out;
  }

  .feature-box:hover {
    transform: translateY(-6px);
  }

  .feature-box dt {
    font-weight: bold;
  }
</style>

